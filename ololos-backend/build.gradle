buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

    }
}


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'

jar {
    baseName = 'ololos'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.codehaus.groovy:groovy'

    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.session:spring-session'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    // Mongo
    compile group: 'org.jongo', name: 'jongo', version: '1.3.0'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.security:spring-security-test'
    testCompile 'org.spockframework:spock-spring'
    testCompile 'com.geowarin:spring-spock-mvc:0.2.1'
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}


jar {
    from('../ololos-frontend/dist') {
        into 'static'
    }
}

jar.dependsOn(':ololos-frontend:assemble')


